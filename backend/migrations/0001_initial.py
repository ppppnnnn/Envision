# Generated by Django 2.1.5 on 2019-03-08 17:21

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Administrators',
            fields=[
                ('administrators_id', models.AutoField(primary_key=True, serialize=False)),
                ('uid', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'administrators',
            },
        ),
        migrations.CreateModel(
            name='Affair',
            fields=[
                ('affair_id', models.AutoField(primary_key=True, serialize=False)),
                ('goods_name', models.CharField(max_length=90)),
                ('goods_description', models.TextField(blank=True, null=True)),
                ('goods_owner', models.CharField(max_length=45)),
                ('borrower', models.CharField(max_length=45)),
                ('contact_borrower', models.CharField(max_length=45)),
                ('borrow_time', models.DateTimeField(blank=True, null=True)),
                ('return_time', models.DateTimeField(blank=True, null=True)),
                ('register_time', models.DateTimeField()),
                ('is_return', models.IntegerField()),
            ],
            options={
                'db_table': 'affair',
            },
        ),
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('announcement_id', models.AutoField(primary_key=True, serialize=False)),
                ('author_id', models.IntegerField(blank=True, null=True)),
                ('create_time', models.DateTimeField(blank=True, null=True)),
                ('topic', models.CharField(max_length=45)),
                ('content', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'announcement',
            },
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('article_id', models.AutoField(primary_key=True, serialize=False)),
                ('author_id', models.IntegerField()),
                ('create_time', models.DateTimeField(blank=True, null=True)),
                ('tag', models.CharField(blank=True, max_length=90, null=True)),
                ('topic', models.CharField(max_length=200)),
                ('content', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'article',
            },
        ),
        migrations.CreateModel(
            name='ArticleComment',
            fields=[
                ('comment_id', models.AutoField(primary_key=True, serialize=False)),
                ('article_id', models.IntegerField()),
                ('author_id', models.IntegerField()),
                ('create_time', models.DateTimeField()),
                ('content', models.TextField()),
            ],
            options={
                'db_table': 'article_comment',
            },
        ),
        migrations.CreateModel(
            name='ArticleCommentReply',
            fields=[
                ('comment_reply_id', models.AutoField(primary_key=True, serialize=False)),
                ('article_id', models.IntegerField(blank=True, null=True)),
                ('comment_id', models.IntegerField()),
                ('author_id', models.IntegerField()),
                ('create_time', models.DateTimeField()),
                ('content', models.TextField()),
            ],
            options={
                'db_table': 'article_comment_reply',
            },
        ),
        migrations.CreateModel(
            name='DirectAnswer',
            fields=[
                ('direct_answer_id', models.AutoField(primary_key=True, serialize=False)),
                ('author_id', models.IntegerField()),
                ('create_time', models.DateTimeField()),
                ('tag', models.CharField(blank=True, max_length=90, null=True)),
                ('question', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('invited_person_id', models.CharField(blank=True, max_length=90, null=True)),
            ],
            options={
                'db_table': 'direct_answer',
            },
        ),
        migrations.CreateModel(
            name='DirectAnswerAnswer',
            fields=[
                ('answer_id', models.AutoField(primary_key=True, serialize=False)),
                ('direct_answer_id', models.IntegerField()),
                ('author_id', models.IntegerField()),
                ('create_time', models.DateTimeField()),
                ('content', models.TextField()),
            ],
            options={
                'db_table': 'direct_answer_answer',
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('group_id', models.AutoField(primary_key=True, serialize=False)),
                ('group_name', models.CharField(max_length=45)),
                ('group_admin_id', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('create_time', models.DateTimeField()),
                ('group_member_id', models.CharField(blank=True, max_length=200, null=True)),
                ('degree_of_activity', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'group',
            },
        ),
        migrations.CreateModel(
            name='GroupActivity',
            fields=[
                ('group_activity_id', models.AutoField(primary_key=True, serialize=False)),
                ('group_id', models.IntegerField()),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('topic', models.CharField(max_length=90)),
                ('content', models.TextField(blank=True, null=True)),
                ('is_end', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'group_activity',
            },
        ),
        migrations.CreateModel(
            name='GroupAnnouncement',
            fields=[
                ('announcement_id', models.AutoField(primary_key=True, serialize=False)),
                ('group_id', models.IntegerField()),
                ('create_time', models.DateTimeField()),
                ('topic', models.CharField(max_length=90)),
                ('content', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'group_bulletin',
            },
        ),
        migrations.CreateModel(
            name='GroupLearningMaterials',
            fields=[
                ('materials_id', models.AutoField(primary_key=True, serialize=False)),
                ('author_id', models.IntegerField()),
                ('group_id', models.IntegerField()),
                ('create_time', models.DateTimeField()),
                ('content', models.FileField(upload_to='')),
            ],
            options={
                'db_table': 'group_learning_materials',
            },
        ),
        migrations.CreateModel(
            name='GroupLearningTask',
            fields=[
                ('task_id', models.AutoField(primary_key=True, serialize=False)),
                ('group_id', models.IntegerField()),
                ('publisher_id', models.IntegerField(blank=True, null=True)),
                ('topic', models.CharField(max_length=45)),
                ('description', models.TextField(blank=True, null=True)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('is_end', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'group_learning_task',
            },
        ),
        migrations.CreateModel(
            name='GroupLearningTaskSubmit',
            fields=[
                ('task_submit_id', models.AutoField(primary_key=True, serialize=False)),
                ('task_id', models.IntegerField()),
                ('group_id', models.IntegerField(blank=True, null=True)),
                ('author_id', models.IntegerField()),
                ('create_time', models.DateTimeField()),
                ('content', models.TextField()),
                ('score', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'task_submit',
            },
        ),
        migrations.CreateModel(
            name='LearningTask',
            fields=[
                ('task_id', models.AutoField(primary_key=True, serialize=False)),
                ('author_id', models.IntegerField()),
                ('start_time', models.DateField()),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('tag', models.CharField(blank=True, max_length=45, null=True)),
                ('topic', models.CharField(max_length=45)),
                ('content', models.TextField(blank=True, null=True)),
                ('is_supervise', models.IntegerField(blank=True, null=True)),
                ('is_end', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'learning_task',
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('post_id', models.AutoField(primary_key=True, serialize=False)),
                ('author_id', models.IntegerField(blank=True, null=True)),
                ('section_id', models.IntegerField()),
                ('create_time', models.DateTimeField()),
                ('topic', models.CharField(max_length=200)),
                ('content', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'post',
            },
        ),
        migrations.CreateModel(
            name='PostComment',
            fields=[
                ('comment_id', models.AutoField(primary_key=True, serialize=False)),
                ('author_id', models.IntegerField()),
                ('post_id', models.IntegerField()),
                ('create_time', models.DateTimeField()),
                ('content', models.TextField()),
            ],
            options={
                'db_table': 'post_comment',
            },
        ),
        migrations.CreateModel(
            name='PostCommentReply',
            fields=[
                ('comment_reply_id', models.AutoField(primary_key=True, serialize=False)),
                ('comment_id', models.IntegerField()),
                ('post_id', models.IntegerField(blank=True, null=True)),
                ('author_id', models.IntegerField()),
                ('create_time', models.DateTimeField()),
                ('content', models.TextField()),
            ],
            options={
                'db_table': 'post_comment_reply',
            },
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('section_id', models.AutoField(primary_key=True, serialize=False)),
                ('create_time', models.DateTimeField()),
                ('theme', models.CharField(max_length=45)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'section',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('uid', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=45)),
                ('e_mail', models.CharField(max_length=45)),
                ('password', models.CharField(max_length=200)),
                ('salt', models.CharField(blank=True, max_length=45, null=True)),
                ('real_name', models.CharField(blank=True, max_length=45, null=True)),
                ('user_logo', models.CharField(blank=True, max_length=45, null=True)),
                ('user_description', models.CharField(blank=True, max_length=200, null=True)),
                ('major', models.CharField(blank=True, max_length=45, null=True)),
                ('e_class', models.CharField(blank=True, max_length=45, null=True)),
                ('dept', models.CharField(blank=True, max_length=45, null=True)),
                ('identity', models.CharField(blank=True, max_length=45, null=True)),
                ('concern', models.CharField(blank=True, max_length=90, null=True)),
            ],
            options={
                'db_table': 'user',
            },
        ),
        migrations.CreateModel(
            name='UserAccount',
            fields=[
                ('uid', models.IntegerField(primary_key=True, serialize=False)),
                ('user_rank', models.IntegerField(blank=True, null=True)),
                ('user_score', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'useraccount',
            },
        ),
        migrations.CreateModel(
            name='UserToken',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=64)),
                ('owner', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='backend.User')),
            ],
            options={
                'db_table': 'user_token',
            },
        ),
    ]
